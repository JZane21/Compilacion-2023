/**
 * generated by Xtext 2.31.0
 */
package edu.upb.lp.iAmGroot.impl;

import edu.upb.lp.iAmGroot.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class IAmGrootFactoryImpl extends EFactoryImpl implements IAmGrootFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static IAmGrootFactory init()
  {
    try
    {
      IAmGrootFactory theIAmGrootFactory = (IAmGrootFactory)EPackage.Registry.INSTANCE.getEFactory(IAmGrootPackage.eNS_URI);
      if (theIAmGrootFactory != null)
      {
        return theIAmGrootFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new IAmGrootFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IAmGrootFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case IAmGrootPackage.PROGRAM: return createProgram();
      case IAmGrootPackage.GROOT: return createGroot();
      case IAmGrootPackage.SENTENCE: return createSentence();
      case IAmGrootPackage.DECLARATION: return createDeclaration();
      case IAmGrootPackage.GROOT_TYPES: return createGrootTypes();
      case IAmGrootPackage.INITIALIZATION_NUM: return createInitializationNum();
      case IAmGrootPackage.INITIALIZATION_STR: return createInitializationStr();
      case IAmGrootPackage.INITIALIZATION_BOOL: return createInitializationBool();
      case IAmGrootPackage.ASSIGNATION: return createAssignation();
      case IAmGrootPackage.ASSIGNATION_VALUE: return createAssignationValue();
      case IAmGrootPackage.ASSIGNATION_NUM: return createAssignationNum();
      case IAmGrootPackage.ASSIGNATION_STR: return createAssignationStr();
      case IAmGrootPackage.ASSIGNATION_BOOL: return createAssignationBool();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Program createProgram()
  {
    ProgramImpl program = new ProgramImpl();
    return program;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Groot createGroot()
  {
    GrootImpl groot = new GrootImpl();
    return groot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sentence createSentence()
  {
    SentenceImpl sentence = new SentenceImpl();
    return sentence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Declaration createDeclaration()
  {
    DeclarationImpl declaration = new DeclarationImpl();
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GrootTypes createGrootTypes()
  {
    GrootTypesImpl grootTypes = new GrootTypesImpl();
    return grootTypes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InitializationNum createInitializationNum()
  {
    InitializationNumImpl initializationNum = new InitializationNumImpl();
    return initializationNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InitializationStr createInitializationStr()
  {
    InitializationStrImpl initializationStr = new InitializationStrImpl();
    return initializationStr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InitializationBool createInitializationBool()
  {
    InitializationBoolImpl initializationBool = new InitializationBoolImpl();
    return initializationBool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Assignation createAssignation()
  {
    AssignationImpl assignation = new AssignationImpl();
    return assignation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignationValue createAssignationValue()
  {
    AssignationValueImpl assignationValue = new AssignationValueImpl();
    return assignationValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignationNum createAssignationNum()
  {
    AssignationNumImpl assignationNum = new AssignationNumImpl();
    return assignationNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignationStr createAssignationStr()
  {
    AssignationStrImpl assignationStr = new AssignationStrImpl();
    return assignationStr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssignationBool createAssignationBool()
  {
    AssignationBoolImpl assignationBool = new AssignationBoolImpl();
    return assignationBool;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IAmGrootPackage getIAmGrootPackage()
  {
    return (IAmGrootPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static IAmGrootPackage getPackage()
  {
    return IAmGrootPackage.eINSTANCE;
  }

} //IAmGrootFactoryImpl
