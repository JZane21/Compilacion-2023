/**
 * generated by Xtext 2.31.0
 */
package edu.upb.lp.iAmGroot.util;

import edu.upb.lp.iAmGroot.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see edu.upb.lp.iAmGroot.IAmGrootPackage
 * @generated
 */
public class IAmGrootSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static IAmGrootPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IAmGrootSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = IAmGrootPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case IAmGrootPackage.PROGRAM:
      {
        Program program = (Program)theEObject;
        T result = caseProgram(program);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.GROOT:
      {
        Groot groot = (Groot)theEObject;
        T result = caseGroot(groot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.SENTENCE:
      {
        Sentence sentence = (Sentence)theEObject;
        T result = caseSentence(sentence);
        if (result == null) result = caseGroot(sentence);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.DECLARATION:
      {
        Declaration declaration = (Declaration)theEObject;
        T result = caseDeclaration(declaration);
        if (result == null) result = caseSentence(declaration);
        if (result == null) result = caseGroot(declaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.GROOT_TYPES:
      {
        GrootTypes grootTypes = (GrootTypes)theEObject;
        T result = caseGrootTypes(grootTypes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.INITIALIZATION_NUM:
      {
        InitializationNum initializationNum = (InitializationNum)theEObject;
        T result = caseInitializationNum(initializationNum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.INITIALIZATION_STR:
      {
        InitializationStr initializationStr = (InitializationStr)theEObject;
        T result = caseInitializationStr(initializationStr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.INITIALIZATION_BOOL:
      {
        InitializationBool initializationBool = (InitializationBool)theEObject;
        T result = caseInitializationBool(initializationBool);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.ASSIGNATION:
      {
        Assignation assignation = (Assignation)theEObject;
        T result = caseAssignation(assignation);
        if (result == null) result = caseSentence(assignation);
        if (result == null) result = caseGroot(assignation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.ASSIGNATION_VALUE:
      {
        AssignationValue assignationValue = (AssignationValue)theEObject;
        T result = caseAssignationValue(assignationValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.ASSIGNATION_NUM:
      {
        AssignationNum assignationNum = (AssignationNum)theEObject;
        T result = caseAssignationNum(assignationNum);
        if (result == null) result = caseInitializationNum(assignationNum);
        if (result == null) result = caseAssignationValue(assignationNum);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.ASSIGNATION_STR:
      {
        AssignationStr assignationStr = (AssignationStr)theEObject;
        T result = caseAssignationStr(assignationStr);
        if (result == null) result = caseInitializationStr(assignationStr);
        if (result == null) result = caseAssignationValue(assignationStr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case IAmGrootPackage.ASSIGNATION_BOOL:
      {
        AssignationBool assignationBool = (AssignationBool)theEObject;
        T result = caseAssignationBool(assignationBool);
        if (result == null) result = caseInitializationBool(assignationBool);
        if (result == null) result = caseAssignationValue(assignationBool);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgram(Program object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Groot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Groot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroot(Groot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sentence</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sentence</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSentence(Sentence object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeclaration(Declaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Groot Types</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Groot Types</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGrootTypes(GrootTypes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initialization Num</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initialization Num</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitializationNum(InitializationNum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initialization Str</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initialization Str</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitializationStr(InitializationStr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initialization Bool</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initialization Bool</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitializationBool(InitializationBool object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignation(Assignation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignation Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignation Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignationValue(AssignationValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignation Num</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignation Num</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignationNum(AssignationNum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignation Str</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignation Str</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignationStr(AssignationStr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Assignation Bool</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Assignation Bool</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAssignationBool(AssignationBool object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //IAmGrootSwitch
